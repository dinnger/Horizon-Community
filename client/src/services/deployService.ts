// Servicio para integrar con el sistema de despliegues del servidor
import type { IDeploymentType } from '../../../shared/interfaces/deployment.interface'

// Temporal: funci√≥n que simula getDeploysClass()
export function getAvailableDeployTypes(): IDeploymentType[] {
	return [
		{
			name: 'docker',
			info: {
				title: 'Docker',
				desc: 'Despliegue usando contenedores Docker',
				icon: 'üê≥'
			},
			properties: {}
		},
		{
			name: 'kubernetes',
			info: {
				title: 'Kubernetes',
				desc: 'Despliegue en cl√∫ster de Kubernetes',
				icon: '‚ò∏Ô∏è'
			},
			properties: {}
		},
		{
			name: 'serverless',
			info: {
				title: 'Serverless',
				desc: 'Despliegue en funciones serverless',
				icon: '‚ö°'
			},
			properties: {}
		},
		{
			name: 'vm',
			info: {
				title: 'Virtual Machine',
				desc: 'Despliegue en m√°quina virtual',
				icon: 'üíª'
			},
			properties: {}
		},
		{
			name: 'static',
			info: {
				title: 'Static Site',
				desc: 'Sitio web est√°tico',
				icon: 'üìÑ'
			},
			properties: {}
		}
	]
}

// TODO: Integrar con el servidor
export async function fetchDeployTypes(): Promise<IDeploymentType[]> {
	try {
		// Aqu√≠ se har√≠a la llamada al servidor para obtener los tipos desde deploy.store.ts
		// const response = await fetch('/api/deploy-types')
		// return response.json()

		// Por ahora retornamos los tipos est√°ticos
		return getAvailableDeployTypes()
	} catch (error) {
		console.error('Error fetching deploy types:', error)
		return getAvailableDeployTypes()
	}
}
